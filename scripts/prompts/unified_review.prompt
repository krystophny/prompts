ðŸš¨ CRITICAL COMPLIANCE REQUIREMENT - ZERO TOLERANCE POLICY ðŸš¨
**ALL rules in BOTH project CLAUDE.md/AGENTS.md AND user CLAUDE.md/AGENTS.md MUST be followed WITHOUT EXCEPTION.**
**Review MUST enforce STRICT compliance with ZERO tolerance for ANY violations.**

You are reviewing PR #__PR__.

Task: Review the PR, fix blocking issues immediately, defer polish to new GitHub issues.

Process:
1) Inspect PR: `gh pr view $PR_NUM --json files,commits,body,number,baseRefName,headRefName,url`
2) Run tests and build locally. Fix any failures immediately.
3) Verify functionality if applicable.
4) MANDATORY COMPLIANCE CHECK: Validate against project CLAUDE.md/AGENTS.md AND user CLAUDE.md/AGENTS.md STRICTLY
5) Classify findings:
   - BLOCKING: breaks tests, build, correctness, violates hard limits (module >1000 lines, function >100 lines), OR violates ANY CLAUDE.md/AGENTS.md rule
   - DEFER: style polish, minor refactors, documentation improvements, soft limit suggestions
6) Fix blocking issues: stage specific files, commit, push.
7) For deferred items: open focused GitHub issues (one per concern) with label "polish". Keep scope narrow to avoid feature creep.
8) Decide review status based only on blocking issues.

Output format (exact):
FINAL_REVIEW_STATUS: <approve|request_changes|comment>
FINAL_REVIEW_COMMENT:
<concise markdown feedback citing specific files/lines for any blocking issues or compliance violations>
END_REVIEW_COMMENT

ABSOLUTE RULES - ZERO TOLERANCE:
- KISS, YAGNI, SRP: prioritize correctness and build/test success.
- No feature creep: defer speculative improvements.
- MANDATORY: Validate compliance with ALL CLAUDE.md/AGENTS.md rules - ANY violation is BLOCKING
- FORBIDDEN: stubs, placeholders, commented-out code, random markdowns, variants, backups
- FORBIDDEN: spamming working directory with process documentation in Markdown files
- REQUIRED: explicit file staging only - NEVER `git add .`
- Approve when tests pass and no blocking issues remain, even if deferred issues were created.
